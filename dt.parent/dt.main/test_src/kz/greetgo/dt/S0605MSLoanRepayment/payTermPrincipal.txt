group (
    condition (
        case (isDefined(toNum(txnAmt)),
            assign(txnAmt, toNum(txnAmt))
        )
    ),
    condition (
        case (isDefined(toNum(termNumber)),
            assign(termNumber, toNum(termNumber))
        )
    ),
    condition (
        case (isDefined(toNum(in.accountIndex)),
            assign(in.accountIndex,toNum(in.accountIndex))
        )
    ),


    condition (
	    case (txnAmt >= client.account[in.accountIndex].payPlan[termNumber].remainingPrincipal & client.account[in.accountIndex].payPlan[termNumber].remainingPrincipal > 0,
		    group (

				assign(client.account[in.accountIndex].payPlan[termNumber].remainingTotal, round(client.account[in.accountIndex].payPlan[termNumber].remainingTotal
					- client.account[in.accountIndex].payPlan[termNumber].remainingPrincipal, 2)),

				assign(client.account[in.accountIndex].payPlan[termNumber].paidTotal, round(client.account[in.accountIndex].payPlan[termNumber].paidTotal
					+ client.account[in.accountIndex].payPlan[termNumber].remainingPrincipal, 2)),

				assign(client.account[in.accountIndex].payPlan[termNumber].paidPrincipal,
				round(client.account[in.accountIndex].payPlan[termNumber].paidPrincipal + client.account[in.accountIndex].payPlan[termNumber].remainingPrincipal, 2)),

                group (

                    assign(client.account[in.accountIndex].totalPaidPrincipalAmt, round(client.account[in.accountIndex].totalPaidPrincipalAmt + client.account[in.accountIndex].payPlan[termNumber].remainingPrincipal, 2)),
                    assign(client.account[in.accountIndex].totalRemPrincipalAmt, round(client.account[in.accountIndex].totalRemPrincipalAmt - client.account[in.accountIndex].payPlan[termNumber].remainingPrincipal, 2)),

                    assign(client.account[in.accountIndex].paidSumOfDebtTillBizDate, round (client.account[in.accountIndex].paidSumOfDebtTillBizDate + client.account[in.accountIndex].payPlan[termNumber].remainingPrincipal, 2)),
                    assign(client.account[in.accountIndex].totalRemainingAmt, round(client.account[in.accountIndex].totalRemainingAmt - client.account[in.accountIndex].payPlan[termNumber].remainingPrincipal, 2))

                ),

                assign(txnAmt, round(txnAmt - client.account[in.accountIndex].payPlan[termNumber].remainingPrincipal, 2)),

				assign(client.account[in.accountIndex].payPlan[termNumber].remainingPrincipal, 0)

		   )
	    ),
	    case (txnAmt < client.account[in.accountIndex].payPlan[termNumber].remainingPrincipal & txnAmt > 0,
		    group (
				assign(client.account[in.accountIndex].payPlan[termNumber].remainingTotal, round(client.account[in.accountIndex].payPlan[termNumber].remainingTotal
					- txnAmt, 2)),

				assign(client.account[in.accountIndex].payPlan[termNumber].paidTotal, round(client.account[in.accountIndex].payPlan[termNumber].paidTotal
					+ txnAmt, 2)),

				assign(client.account[in.accountIndex].payPlan[termNumber].paidPrincipal,
				round(client.account[in.accountIndex].payPlan[termNumber].paidPrincipal + txnAmt, 2)),


	            assign(client.account[in.accountIndex].payPlan[termNumber].remainingPrincipal,
                round(client.account[in.accountIndex].payPlan[termNumber].remainingPrincipal - txnAmt, 2)),

                group (
                    assign(client.account[in.accountIndex].totalPaidPrincipalAmt, round(client.account[in.accountIndex].totalPaidPrincipalAmt + txnAmt, 2)),
                    assign(client.account[in.accountIndex].totalRemPrincipalAmt, round(client.account[in.accountIndex].totalRemPrincipalAmt - txnAmt, 2)),

                    assign(client.account[in.accountIndex].paidSumOfDebtTillBizDate, round (client.account[in.accountIndex].paidSumOfDebtTillBizDate + txnAmt, 2)),
                    assign(client.account[in.accountIndex].totalRemainingAmt, round (client.account[in.accountIndex].totalRemainingAmt - txnAmt, 2))
                ),

              	assign(txnAmt, 0)
		    )
	    )
	)
)